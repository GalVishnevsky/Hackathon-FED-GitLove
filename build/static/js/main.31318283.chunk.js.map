{"version":3,"sources":["assets/gay.svg","assets/hetero.svg","assets/lesbian.svg","assets/trans.svg","assets/cat.svg","assets/dog.svg","assets/duck.svg","assets/fish.svg","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/SignOut/index.js","components/Navigation/index.js","components/ProfileSetUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","constants/roles.js","components/Question/index.js","components/Swipe/index.js","components/Match/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doSignInWithFacebook","auth","signInWithPopup","facebookProvider","doSignOut","signOut","doPasswordReset","email","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","password","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","objectSpread","emailVerified","providerData","db","collection","doc","users","message","messages","app","initializeApp","serverValue","firestore","ServerValue","emailAuthProvider","EmailAuthProvider","FacebookAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","SET_UP","MATCH","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","_ref","Menu","position","Item","name","NavigationAuth","pointing","secondary","Container","as","Link","to","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","gitUsername","tenBisEmail","tenBisPassword","axios","post","userId","ROUTES","catch","code","onChange","defineProperty","target","facebookUser","_this$state2","isInvalid","Message","negative","Form","Field","className","src","concat","id","placeholder","Group","widths","Button","primary","SignUpForm","ProfileSetUp","Grid","centered","columns","Column","textAlign","SignInFacebookBase","socialAuthUser","userDocument","additionalUserInfo","profile","exists","set","profilePic","gender","preventDefault","Icon","SignInFacebook","SignInPage","PasswordForgetFormBase","PasswordForget","Header","PasswordForgetForm","TimeAgo","time","distanceInWordsToNow","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","Feed","Event","Content","Summary","User","Date","MessageItem_TimeAgo","createdAt","Extra","editedAt","Meta","icon","color","MessageList","Messages_MessageItem","Messages","onListenForMessages","loading","orderBy","limit","onSnapshot","messageObject","docs","i","messageList","keys","onChangeText","onCreateMessage","add","now","remove","onNextPage","Card","fluid","Description","Loader","active","inline","size","positive","Messages_MessageList","info","TextArea","HomePage","forEach","components_Messages","PasswordChangeForm","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this3","LoginManagement","PasswordChange","UserList","usersObject","usersList","Table","singleLine","Row","HeaderCell","Body","Cell","pathname","UserItem","onSendPasswordResetEmail","params","on","val","roles","Switch","Route","exact","path","component","questions","label","answers","image","hetero","gay","lesbian","trans","cat","dog","duck","fish","QuestionViewBase","question","shift","Divider","answer","Image","selectedAnswer","onAnswerClick","bind","charAt","toUpperCase","slice","errors","QuestionView","$","Swipe","_Component","swipe","self","addClass","delay","fadeOut","find","append","matchedId","result","divStyle","backgroundImage","pic","display","age","Math","random","style","score","backgroundColor","toFixed","langs","join","MatchBase","hasFetched","swipes","nextProps","nextState","res","Swipe_Swipe","usedId","rank","languages","top","left","Match","BrowserRouter","components_Navigation","ProfileSetUpPage","PasswordForgetPage","AccountPage","AdminPage","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+MCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0FCdSC,EAFSC,IAAMC,cAAc,8CCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIlCR,6BCNTW,iBAAS,CACbC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,iBCPrBM,EDWE,SAAAC,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAsBdE,qBAAuB,kBACrBH,EAAKI,KAAKC,gBAAgBL,EAAKM,mBAvBnBL,KAyBdM,UAAY,kBAAMP,EAAKI,KAAKI,WAzBdP,KA2BdQ,gBAAkB,SAAAC,GAAK,OAAIV,EAAKI,KAAKO,uBAAuBD,IA3B9CT,KA6BdW,wBAA0B,kBACxBZ,EAAKI,KAAKS,YAAYC,sBAAsB,CAC1CC,IAAKvB,qWAAYwB,yCA/BPf,KAkCdgB,iBAAmB,SAAAC,GAAQ,OACzBlB,EAAKI,KAAKS,YAAYM,eAAeD,IAnCzBjB,KAuCdmB,mBAAqB,SAACC,EAAMC,GAAP,OACnBtB,EAAKI,KAAKmB,mBAAmB,SAAAC,GACvBA,EACFxB,EAAKyB,KAAKD,EAASE,KAChBC,MACAC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,OAGxBP,EAAQpC,OAAA4C,EAAA,EAAA5C,CAAA,CACNsC,IAAKF,EAASE,IACdhB,MAAOc,EAASd,MAChBuB,cAAeT,EAASS,cACxBC,aAAcV,EAASU,cACpBJ,GAGLT,EAAKG,KAGTF,OA3DQrB,KAiEdwB,KAAO,SAAAC,GAAG,OAAI1B,EAAKmC,GAAGC,WAAR,SAA4BC,IAAIX,IAjEhCzB,KAmEdqC,MAAQ,kBAAMtC,EAAKmC,GAAGC,WAAR,UAnEAnC,KAuEdsC,QAAU,SAAAb,GAAG,OAAI1B,EAAKmC,GAAGC,WAAR,YAA+BC,IAAIX,IAvEtCzB,KAyEduC,SAAW,kBAAMxC,EAAKmC,GAAGC,WAAR,aAxEfK,IAAIC,cAAcpD,GAIlBW,KAAK0C,YAAcF,IAAIG,UAAUC,YACjC5C,KAAK6C,kBAAoBL,IAAIrC,KAAK2C,kBAIlC9C,KAAKG,KAAOqC,IAAIrC,OAChBH,KAAKkC,GAAKM,IAAIG,YAKd3C,KAAKK,iBAAmB,IAAImC,IAAIrC,KAAK4C,sBEc1BC,EAvCY,SAAApE,GAAa,IAChCqE,EADgC,SAAAC,GAEpC,SAAAD,EAAYpE,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAiD,IACjBlD,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAA8D,GAAAI,KAAArD,KAAMnB,KAEDyE,MAAQ,CACX/B,SAAUgC,KAAKC,MAAMC,aAAaC,QAAQ,cAJ3B3D,EAFiB,OAAAZ,OAAAwE,EAAA,EAAAxE,CAAA8D,EAAAC,GAAA/D,OAAAyE,EAAA,EAAAzE,CAAA8D,EAAA,EAAAY,IAAA,oBAAAC,MAAA,WAUhB,IAAAC,EAAA/D,KAClBA,KAAKgE,SAAWhE,KAAKnB,MAAMK,SAASiC,mBAClC,SAAAI,GACEkC,aAAaQ,QAAQ,WAAYV,KAAKW,UAAU3C,IAChDwC,EAAKI,SAAS,CAAE5C,cAElB,WACEkC,aAAaW,WAAW,YACxBL,EAAKI,SAAS,CAAE5C,SAAU,WAlBI,CAAAsC,IAAA,uBAAAC,MAAA,WAwBlC9D,KAAKgE,aAxB6B,CAAAH,IAAA,SAAAC,MAAA,WA4BlC,OACEhF,EAAAC,EAAAC,cAACqF,EAAgBC,SAAjB,CAA0BR,MAAO9D,KAAKsD,MAAM/B,UAC1CzC,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeY,KAAKnB,MAApB,CAA2BsB,KAAMH,KAAKsD,MAAM/B,iBA9Bd0B,EAAA,CACLzE,IAAMI,WAmCvC,OAAOD,EAAasE,qBCxCTsB,EAAkB,SAGlBC,EAAmB,SCsCjBC,EAlCW,SAAAC,GAAS,OAAI,SAAA9F,GAAa,IAC5C+F,EAD4C,SAAAzB,GAAA,SAAAyB,IAAA,OAAAxF,OAAAc,EAAA,EAAAd,CAAAa,KAAA2E,GAAAxF,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAwF,GAAAC,MAAA5E,KAAA6E,YAAA,OAAA1F,OAAAwE,EAAA,EAAAxE,CAAAwF,EAAAzB,GAAA/D,OAAAyE,EAAA,EAAAzE,CAAAwF,EAAA,EAAAd,IAAA,oBAAAC,MAAA,WAE5B,IAAA/D,EAAAC,KAClBA,KAAKgE,SAAWhE,KAAKnB,MAAMK,SAASiC,mBAClC,SAAAI,GACOmD,EAAUnD,IACbxB,EAAKlB,MAAMiG,QAAQC,KDZA,MCevB,kBAAMhF,EAAKlB,MAAMiG,QAAQC,KDfF,SCMqB,CAAAlB,IAAA,uBAAAC,MAAA,WAc9C9D,KAAKgE,aAdyC,CAAAH,IAAA,SAAAC,MAAA,WAiBvC,IAAAC,EAAA/D,KACP,OACElB,EAAAC,EAAAC,cAACqF,EAAgBpF,SAAjB,KACG,SAAAsC,GAAQ,OACPmD,EAAUnD,GAAYzC,EAAAC,EAAAC,cAACJ,EAAcmF,EAAKlF,OAAY,WArBd8F,EAAA,CAClBnG,IAAMI,WA2BtC,OAAOoG,YACLC,IACAtG,EAFKqG,CAGLL,KC2BWO,EAtDe,SAAAtG,GAAa,IACnCuG,EADmC,SAAAjC,GAEvC,SAAAiC,EAAYtG,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmF,IACjBpF,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAgG,GAAA9B,KAAArD,KAAMnB,KAKRuG,wBAA0B,WACxBrF,EAAKlB,MAAMK,SACRyB,0BACAgB,KAAK,kBAAM5B,EAAKoE,SAAS,CAAEkB,QAAQ,OANtCtF,EAAKuD,MAAQ,CAAE+B,QAAQ,GAHNtF,EAFoB,OAAAZ,OAAAwE,EAAA,EAAAxE,CAAAgG,EAAAjC,GAAA/D,OAAAyE,EAAA,EAAAzE,CAAAgG,EAAA,EAAAtB,IAAA,SAAAC,MAAA,WAc9B,IAAAC,EAAA/D,KACP,OACElB,EAAAC,EAAAC,cAACqF,EAAgBpF,SAAjB,KACG,SAAAsC,GAAQ,OAxBY,SAAAA,GAAQ,OACrCA,IACCA,EAASS,eACVT,EAASU,aACNqD,IAAI,SAAAC,GAAQ,OAAIA,EAASC,aACzBC,SAAS,YAoBFC,CAAuBnE,GACrBzC,EAAAC,EAAAC,cAAA,WACG+E,EAAKT,MAAM+B,OACVvG,EAAAC,EAAAC,cAAA,4JAMAF,EAAAC,EAAAC,cAAA,wIAOFF,EAAAC,EAAAC,cAAA,UACE2G,KAAK,SACLC,QAAS7B,EAAKqB,wBACdS,SAAU9B,EAAKT,MAAM+B,QAHvB,6BASFvG,EAAAC,EAAAC,cAACJ,EAAcmF,EAAKlF,aA3CSsG,EAAA,CACL3G,IAAMI,WAkD1C,OAAOD,EAAawG,aCnDPxG,IANO,SAAAmH,GAAA,IAAG5G,EAAH4G,EAAG5G,SAAH,OACpBJ,EAAAC,EAAAC,cAAC+G,EAAA,EAAKA,KAAN,CAAWC,SAAS,SAClBlH,EAAAC,EAAAC,cAAC+G,EAAA,EAAKE,KAAN,CAAWC,KAAK,SAASN,QAAS1G,EAASoB,wBCazC6F,EAAiB,SAAAL,KAAGvE,SAAH,OACrBzC,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMK,UAAQ,EAACC,WAAS,GACtBvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KAEExH,EAAAC,EAAAC,cAAC+G,EAAA,EAAKE,KAAN,CAAWC,KAAK,OAAOK,GAAIC,IAAMC,GJtBR,UIuBzB3H,EAAAC,EAAAC,cAAC+G,EAAA,EAAKE,KAAN,CAAWC,KAAK,UAAUK,GAAIC,IAAMC,GJrBX,aIsBzB3H,EAAAC,EAAAC,cAAC0H,EAAD,SAKAC,EAAoB,kBACxB7H,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMK,UAAQ,EAACC,WAAS,GACtBvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KAEExH,EAAAC,EAAAC,cAAC+G,EAAA,EAAKA,KAAN,CAAWC,SAAS,SAClBlH,EAAAC,EAAAC,cAAC+G,EAAA,EAAKE,KAAN,CAAWC,KAAK,UAAUK,GAAIC,IAAMC,GJnCb,UIyChBG,EAlCI,kBACjB9H,EAAAC,EAAAC,cAACqF,EAAgBpF,SAAjB,KACG,SAAAsC,GAAQ,OACPA,EACEzC,EAAAC,EAAAC,cAAC6H,EAAD,CAAgBtF,SAAUA,IAE1BzC,EAAAC,EAAAC,cAAC8H,EAAD,sECSFC,EAAgB,CACpBC,SAAa,GACbvG,MAAa,GACbwG,YAAa,GACbC,YAAa,GACbC,SAAa,EACbC,MAAa,MAGTC,EAA4B,4BAE5BC,EAAwB,2RAQxBC,cACJ,SAAAA,EAAY1I,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAuH,IACjBxH,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAoI,GAAAlE,KAAArD,KAAMnB,KAUR2I,SAAW,SAAAC,GAAS,IAAAC,EAC2C3H,EAAKuD,MAA3D0D,EADWU,EACXV,SAAUW,EADCD,EACDC,YAAaC,EADZF,EACYE,YAAaC,EADzBH,EACyBG,eAE3C,OAAOC,IAAMC,KAAK,8CAA+C,CAC/DC,OAAQjI,EAAKlB,MAAMsB,KAAKsB,IACxBuF,WACAW,cACAC,cACAC,mBAEClG,KAAK,WACJ5B,EAAKoE,SAAS,CAACiD,MAAO,OACtBrH,EAAKlB,MAAMiG,QAAQC,KAAKkD,KAEzBC,MAAM,SAAAd,GACFA,EAAMe,OAASd,IAChBD,EAAM9E,QAAUgF,GAGlBvH,EAAKoE,SAAS,CAACiD,aA9BFrH,EAkCnBqI,SAAW,SAAAX,GACT1H,EAAKoE,SAALhF,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAgBsI,EAAMa,OAAOpC,KAAOuB,EAAMa,OAAOxE,SAhCjD/D,EAAKuD,MAAQvD,EAAKlB,MAClBkB,EAAKuD,MAALnE,OAAA4C,EAAA,EAAA5C,CAAA,GAAiB4H,EAAkB,CACjCwB,aAAchF,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,MAGnE3D,EAAKuD,MAAM0D,SAAWjH,EAAKuD,MAAMiF,aAAarC,KAR7BnG,wEAsCV,IAAAyI,EAOGxI,KAAKsD,MALPqE,EAFDa,EAECb,YACAX,EAHDwB,EAGCxB,SACAY,EAJDY,EAICZ,YACAC,EALDW,EAKCX,eACAT,EANDoB,EAMCpB,MAGFqB,EACqB,KAAnBZ,GACgB,KAAhBD,GACgB,KAAhBD,EAER,OACE7I,EAAAC,EAAAC,cAAA,WACGoI,GACCtI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,UAAQ,GACf7J,EAAAC,EAAAC,cAAA,SAAIoI,EAAM9E,UAGdxD,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAMpB,SAAUxH,KAAKwH,UACnB1I,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,aAAaC,IAAG,8BAAAC,OAAgChJ,KAAKsD,MAAMiF,aAAaU,GAAxD,wBAC/BnK,EAAAC,EAAAC,cAAA,MAAIiK,GAAG,kBAAP,OACOjJ,KAAKsD,MAAMiF,aAAarC,MAE/BpH,EAAAC,EAAAC,cAAA,SAAO8J,UAAU,iBAAjB,qCAGAhK,EAAAC,EAAAC,cAAA,SACEkH,KAAK,WACLpC,MAAOkD,EACPoB,SAAUpI,KAAKoI,SACfzC,KAAK,OACLuD,YAAY,sBAGhBpK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAO6D,EACPS,SAAUpI,KAAKoI,SACfzC,KAAK,OACLuD,YAAY,qBAGhBpK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAO8D,EACPQ,SAAUpI,KAAKoI,SACfzC,KAAK,OACLuD,YAAY,iBAGhBpK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKO,MAAN,CAAYC,OAAO,SACjBtK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,SACEkH,KAAK,iBACLpC,MAAO+D,EACPO,SAAUpI,KAAKoI,SACfzC,KAAK,WACLuD,YAAY,qBAIlBpK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAO,EAACzD,SAAU4C,EAAW9C,KAAK,SAASmD,UAAU,gBAA7D,oBA1GmBlK,aAyHvB2K,EAAatE,YAAWtG,EAAaqE,EAAmBuE,KAE9DiC,EAtJyB,kBACvB1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB7K,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB/K,EAAAC,EAAAC,cAACuK,EAAD,kBCKAlC,EACE,gDAEFC,EAAwB,mMAOxBwC,cACJ,SAAAA,EAAYjL,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA8J,IACjB/J,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAA2K,GAAAzG,KAAArD,KAAMnB,KAKR2I,SAAW,SAACC,GACV,IAAIsC,EAEJhK,EAAKlB,MAAMK,SAASgB,uBACjByB,KAAK,SAACJ,GAEL,OADAwI,EAAiBxI,EACVxB,EAAKlB,MAAMK,SAASsC,KAAKD,EAASC,KAAKC,KAAKC,QAEpDC,KACC,SAACqI,GAEC,GADAvG,aAAaQ,QAAQ,eAAgBV,KAAKW,UAAU6F,EAAeE,mBAAmBC,WAClFF,EAAaG,OACf,OAAOpK,EAAKlB,MAAMK,SAASsC,KAAKuI,EAAevI,KAAKC,KAAK2I,IAAI,CAC3DlE,KAAe6D,EAAeE,mBAAmBC,QAAQhE,KACzDmE,WAAU,8BAAArB,OAAmCe,EAAeE,mBAAmBC,QAAQjB,GAA7E,sBACVqB,OAAe,WAKtB3I,KAAK,WACJ5B,EAAKoE,SAAS,CAACiD,MAAO,OACtBrH,EAAKlB,MAAMiG,QAAQC,KAAKkD,KAEzBC,MAAM,SAAAd,GACFA,EAAMe,OAASd,IAChBD,EAAM9E,QAAUgF,GAGlBvH,EAAKoE,SAAS,CAACiD,YAGnBK,EAAM8C,kBAnCNxK,EAAKuD,MAAQ,CAAC8D,MAAO,MAHJrH,wEAyCV,IACAqH,EAASpH,KAAKsD,MAAd8D,MAEP,OACEtI,EAAAC,EAAAC,cAAA,QAAMwI,SAAUxH,KAAKwH,SAAUsB,UAAU,UACvChK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQ1D,KAAK,SAASmD,UAAU,iBAC9BhK,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMtE,KAAK,aADb,0BAICkB,GACCtI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,UAAQ,GACf7J,EAAAC,EAAAC,cAAA,SAAIoI,EAAM9E,kBArDW1D,aA6D3B6L,GAAiBzF,YACrBC,IAAYtG,EADSqG,CAErB8E,GAEaY,GApFI,kBACjB5L,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB7K,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB/K,EAAAC,EAAAC,cAAA,OAAK+J,IAAI,mBAAmBE,GAAG,SAC/BnK,EAAAC,EAAAC,cAACyL,GAAD,CAAgBZ,UAAU,wBCM1B9C,GAAgB,CACpBtG,MAAO,GACP2G,MAAO,MAGHuD,eACJ,SAAAA,EAAY9L,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2K,IACjB5K,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAwL,GAAAtH,KAAArD,KAAMnB,KAKR2I,SAAW,SAAAC,GAAS,IACVhH,EAAUV,EAAKuD,MAAf7C,MAERV,EAAKlB,MAAMK,SACRsB,gBAAgBC,GAChBkB,KAAK,WACJ5B,EAAKoE,SAALhF,OAAA4C,EAAA,EAAA5C,CAAA,GAAmB4H,OAEpBmB,MAAM,SAAAd,GACLrH,EAAKoE,SAAS,CAAEiD,YAGpBK,EAAM8C,kBAlBWxK,EAqBnBqI,SAAW,SAAAX,GACT1H,EAAKoE,SAALhF,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAiBsI,EAAMa,OAAOpC,KAAOuB,EAAMa,OAAOxE,SAnBlD/D,EAAKuD,MAALnE,OAAA4C,EAAA,EAAA5C,CAAA,GAAkB4H,IAHDhH,wEAyBV,IAAA2H,EACkB1H,KAAKsD,MAAtB7C,EADDiH,EACCjH,MAAO2G,EADRM,EACQN,MAETqB,EAAsB,KAAVhI,EAElB,OACE3B,EAAAC,EAAAC,cAAA,WACGoI,GACCtI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,UAAQ,GACf7J,EAAAC,EAAAC,cAAA,SAAIoI,EAAM9E,UAGdxD,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAMpB,SAAUxH,KAAKwH,UACnB1I,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,QACLpC,MAAO9D,KAAKsD,MAAM7C,MAClB2H,SAAUpI,KAAKoI,SACfzC,KAAK,OACLuD,YAAY,mBAGhBpK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAO,EAACzD,SAAU4C,EAAW9C,KAAK,UAA1C,8BAjD2B/G,aA8DrCgM,GA9E2B,kBACzB9L,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB7K,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,KACE9K,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,KAAKsD,UAAU,UAA1B,mBAGA/K,EAAAC,EAAAC,cAAC8L,GAAD,SA0EAA,GAAqBnM,EAAagM,wBCzF3BI,GAAU,SAAAjF,GAAA,IAAGkF,EAAHlF,EAAGkF,KAAH,OACrBlM,EAAAC,EAAAC,cAAA,YAAOiM,gCAAqBD,GAA5B,SA6FaE,eAzFb,SAAAA,EAAYrM,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAkL,IACjBnL,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAA+L,GAAA7H,KAAArD,KAAMnB,KAQRsM,iBAAmB,WACjBpL,EAAKoE,SAAS,SAAAb,GAAK,MAAK,CACtB8H,UAAW9H,EAAM8H,SACjBC,SAAUtL,EAAKlB,MAAMyD,QAAQgJ,SAZdvL,EAgBnBwL,iBAAmB,SAAA9D,GACjB1H,EAAKoE,SAAS,CAAEkH,SAAU5D,EAAMa,OAAOxE,SAjBtB/D,EAoBnByL,eAAiB,WACfzL,EAAKlB,MAAM4M,cAAc1L,EAAKlB,MAAMyD,QAASvC,EAAKuD,MAAM+H,UAExDtL,EAAKoE,SAAS,CAAEiH,UAAU,KApB1BrL,EAAKuD,MAAQ,CACX8H,UAAU,EACVC,SAAUtL,EAAKlB,MAAMyD,QAAQgJ,MALdvL,wEA0BV,IAAA2L,EAC8B1L,KAAKnB,MAAlCyD,EADDoJ,EACCpJ,QAASqJ,EADVD,EACUC,gBADVjE,EAEwB1H,KAAKsD,MAA5B8H,EAFD1D,EAEC0D,SAAUC,EAFX3D,EAEW2D,SAElB,OACEvM,EAAAC,EAAAC,cAAC4M,GAAA,EAAKC,MAAN,KACE/M,EAAAC,EAAAC,cAAC4M,GAAA,EAAKE,QAAN,KACEhN,EAAAC,EAAAC,cAAC4M,GAAA,EAAKG,QAAN,KACEjN,EAAAC,EAAAC,cAAC4M,GAAA,EAAKI,KAAN,CAAWzF,GAAIC,IAAMC,GAAE,KACpBnE,EAAQd,KAAKwF,UAAY1E,EAAQd,KAAKwG,QAEzClJ,EAAAC,EAAAC,cAAC4M,GAAA,EAAKK,KAAN,KACEnN,EAAAC,EAAAC,cAACkN,GAAD,CAASlB,KAAM1I,EAAQ6J,cAG3BrN,EAAAC,EAAAC,cAAC4M,GAAA,EAAKQ,MAAN,KACGhB,EACCtM,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACE9J,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,SACE2G,KAAK,OACL7B,MAAOuH,EACPjD,SAAUpI,KAAKuL,qBAKrBzM,EAAAC,EAAAC,cAAA,YACGsD,EAAQgJ,KAAM,IACdhJ,EAAQ+J,UAAYvN,EAAAC,EAAAC,cAAA,0BAI3BF,EAAAC,EAAAC,cAAC4M,GAAA,EAAKU,KAAN,KACGlB,EACCtM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQkD,MAAI,EAAC3G,QAAS5F,KAAKwL,gBACzB1M,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMgC,MAAM,QAAQtG,KAAK,kBAE3BpH,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQkD,MAAI,EAAC3G,QAAS5F,KAAKmL,kBACzBrM,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMgC,MAAM,OAAOtG,KAAK,qBAI5BpH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQkD,MAAI,EAAC3G,QAAS5F,KAAKmL,kBACzBrM,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMgC,MAAM,OAAOtG,KAAK,kBAE1BpH,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEkD,MAAI,EACJ3G,QAAS,kBAAM+F,EAAgBrJ,EAAQb,OAEvC3C,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMgC,MAAM,MAAMtG,KAAK,gCA/EftH,aCcX6N,GAjBK,SAAA3G,GAAA,IAClBvD,EADkBuD,EAClBvD,SACAkJ,EAFkB3F,EAElB2F,cACAE,EAHkB7F,EAGlB6F,gBAHkB,OAKlB7M,EAAAC,EAAAC,cAAC4M,GAAA,EAAD,KACGrJ,EAAS+C,IAAI,SAAAhD,GAAO,OACnBxD,EAAAC,EAAAC,cAAC0N,GAAD,CACE7I,IAAKvB,EAAQb,IACba,QAASA,EACTmJ,cAAeA,EACfE,gBAAiBA,4BCFnBgB,eACJ,SAAAA,EAAY9N,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2M,IACjB5M,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAwN,GAAAtJ,KAAArD,KAAMnB,KAcR+N,oBAAsB,WACpB7M,EAAKoE,SAAS,CAAE0I,SAAS,IAEzB9M,EAAKlB,MAAMK,SACRqD,WACAuK,QAAQ,aACRC,MAAMhN,EAAKuD,MAAMyJ,OACjBC,WAAW,SAAApL,GACV,IAAMqL,EAAgBrL,EAASsL,KAAK5H,IAAI,SAAA6H,GAAC,OAAIA,EAAErL,SAE/C,GAAImL,EAAe,CACjB,IAAMG,EAAcjO,OAAOkO,KAAKJ,GAAe3H,IAAI,SAAAzB,GAAG,OAAA1E,OAAA4C,EAAA,EAAA5C,CAAA,GACjD8N,EAAcpJ,GADmC,CAEpDpC,IAAKoC,MAGP9D,EAAKoE,SAAS,CACZ5B,SAAU6K,EACVP,SAAS,SAGX9M,EAAKoE,SAAS,CAAE5B,SAAU,KAAMsK,SAAS,OApC9B9M,EA8CnBuN,aAAe,SAAA7F,GACb1H,EAAKoE,SAAS,CAAEmH,KAAM7D,EAAMa,OAAOxE,SA/ClB/D,EAkDnBwN,gBAAkB,SAAC9F,EAAOlG,GACxBxB,EAAKlB,MAAMK,SAASqD,WAAWiL,IAAI,CACjClC,KAAMvL,EAAKuD,MAAMgI,KACjBtD,OAAQzG,EAASE,IACjB0K,UAAWF,KAAKwB,QAGlB1N,EAAKoE,SAAS,CAAEmH,KAAM,KAEtB7D,EAAM8C,kBA3DWxK,EA8DnB0L,cAAgB,SAACnJ,EAASgJ,GACxBvL,EAAKlB,MAAMK,SAASoD,QAAQA,EAAQb,KAAK2I,IAAzCjL,OAAA4C,EAAA,EAAA5C,CAAA,GACKmD,EADL,CAEEgJ,OACAe,SAAUJ,KAAKwB,UAlEA1N,EAsEnB4L,gBAAkB,SAAAlK,GAChB1B,EAAKlB,MAAMK,SAASoD,QAAQb,GAAKiM,UAvEhB3N,EA0EnB4N,WAAa,WACX5N,EAAKoE,SACH,SAAAb,GAAK,MAAK,CAAEyJ,MAAOzJ,EAAMyJ,MAAQ,IACjChN,EAAK6M,sBA1EP7M,EAAKuD,MAAQ,CACXgI,KAAM,GACNuB,SAAS,EACTtK,SAAU,GACVwK,MAAO,GAPQhN,mFAYjBC,KAAK4M,uGAqEE,IAAA7I,EAAA/D,KACCqC,EAAUrC,KAAKnB,MAAfwD,MADDqF,EAE6B1H,KAAKsD,MAAjCgI,EAFD5D,EAEC4D,KAAM/I,EAFPmF,EAEOnF,SAAUsK,EAFjBnF,EAEiBmF,QACxB,OACE/N,EAAAC,EAAAC,cAACqF,EAAgBpF,SAAjB,KACG,SAAAsC,GAAQ,OACPzC,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CAAMC,OAAO,GACX/O,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KACGjB,GAAW/N,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,cAEhCpB,GAAWtK,GACXzD,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACE6E,KAAK,QACLC,UAAQ,EACRxI,KAAK,SACLC,QAAS7B,EAAK4J,YAJhB,uBAUDpL,GACCzD,EAAAC,EAAAC,cAACoP,GAAD,CACE7L,SAAUA,EAAS+C,IAAI,SAAAhD,GAAO,OAAAnD,OAAA4C,EAAA,EAAA5C,CAAA,GACzBmD,EADyB,CAE5Bd,KAAMa,EACFA,EAAMC,EAAQ0F,QACd,CAAEA,OAAQ1F,EAAQ0F,YAExByD,cAAe1H,EAAK0H,cACpBE,gBAAiB5H,EAAK4H,mBAIxBkB,IAAYtK,GACZzD,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAS2F,MAAI,GACXvP,EAAAC,EAAAC,cAAA,wCAIF6N,GACA/N,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACEpB,SAAU,SAAAC,GAAK,OACb1D,EAAKwJ,gBAAgB9F,EAAOlG,KAG9BzC,EAAAC,EAAAC,cAAC4J,EAAA,EAAK0F,SAAN,CACExK,MAAOwH,EACPlD,SAAUrE,EAAKuJ,aACfpE,YAAY,+BAEdpK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAO,EAAC3D,KAAK,UAArB,QACO7G,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMtE,KAAK,uBAvIftH,aCbR+N,GDiKAhO,EAAagO,IE5JtB4B,eACJ,SAAAA,EAAY1P,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAuO,IACjBxO,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAoP,GAAAlL,KAAArD,KAAMnB,KAEDyE,MAAQ,CACXjB,MAAO,MAJQtC,mFAQC,IAAAgE,EAAA/D,KAClBA,KAAKnB,MAAMK,SAASmD,QAAQ2K,WAAW,SAAApL,GACrC,IAAMS,EAAQ,GACdT,EAASsL,KAAKsB,QAAQ,SAAApM,GACpBC,EAAMD,EAAI6G,IAAM7G,EAAIN,SAGtBiC,EAAKI,SAAS,CACZ9B,6FAUJ,OACEvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,iEAEAF,EAAAC,EAAAC,cAACyP,GAAD,CAAUpM,MAAOrC,KAAKsD,MAAMjB,gBAhCbzD,aAwCRoG,eACbrG,EACAuG,EACAT,EALgB,SAAAlD,GAAQ,QAAMA,IAEjByD,CAIbuJ,IC7CIxH,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACbE,MAAO,MAGHsH,eACJ,SAAAA,EAAY7P,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA0O,IACjB3O,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAuP,GAAArL,KAAArD,KAAMnB,KAKR2I,SAAW,SAAAC,GAAS,IACVR,EAAgBlH,EAAKuD,MAArB2D,YAERlH,EAAKlB,MAAMK,SACR8B,iBAAiBiG,GACjBtF,KAAK,WACJ5B,EAAKoE,SAALhF,OAAA4C,EAAA,EAAA5C,CAAA,GAAmB4H,OAEpBmB,MAAM,SAAAd,GACLrH,EAAKoE,SAAS,CAAEiD,YAGpBK,EAAM8C,kBAlBWxK,EAqBnBqI,SAAW,SAAAX,GACT1H,EAAKoE,SAALhF,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAiBsI,EAAMa,OAAOpC,KAAOuB,EAAMa,OAAOxE,SAnBlD/D,EAAKuD,MAALnE,OAAA4C,EAAA,EAAA5C,CAAA,GAAkB4H,IAHDhH,wEAyBV,IAAA2H,EACqC1H,KAAKsD,MAAzC2D,EADDS,EACCT,YAAaC,EADdQ,EACcR,YAAaE,EAD3BM,EAC2BN,MAE5BqB,EACJxB,IAAgBC,GAA+B,KAAhBD,EAEjC,OACEnI,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAMpB,SAAUxH,KAAKwH,UAClBJ,GACCtI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,UAAQ,GACf7J,EAAAC,EAAAC,cAAA,SAAIoI,EAAM9E,UAGdxD,EAAAC,EAAAC,cAAC4J,EAAA,EAAKO,MAAN,CAAYC,OAAO,SACjBtK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAOmD,EACPmB,SAAUpI,KAAKoI,SACfzC,KAAK,WACLuD,YAAY,kBAGhBpK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAOoD,EACPkB,SAAUpI,KAAKoI,SACfzC,KAAK,WACLuD,YAAY,2BAIlBpK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAO,EAACzD,SAAU4C,EAAW9C,KAAK,UAA1C,6BA7DyB/G,aAqElBD,KAAa+P,IC5DtBC,GAAkB,CAEtB,CACE1F,GAAI,eACJ1D,SAAU,qBAqCRqJ,eACJ,SAAAA,EAAY/P,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA4O,IACjB7O,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAyP,GAAAvL,KAAArD,KAAMnB,KAYRgQ,mBAAqB,WACnB9O,EAAKlB,MAAMK,SAASiB,KACjB2O,2BAA2B/O,EAAKlB,MAAM0C,SAASd,OAC/CkB,KAAK,SAAAoN,GAAmB,OACvBhP,EAAKoE,SAAS,CAAE4K,sBAAqB3H,MAAO,SAE7Cc,MAAM,SAAAd,GAAK,OAAIrH,EAAKoE,SAAS,CAAEiD,aAnBjBrH,EAsBnBiP,kBAAoB,SAAAzJ,GAClBxF,EAAKlB,MAAMK,SAASiB,KAAKS,YACtBqO,cAAclP,EAAKlB,MAAMK,SAASqG,IAClC5D,KAAK5B,EAAK8O,oBACV3G,MAAM,SAAAd,GAAK,OAAIrH,EAAKoE,SAAS,CAAEiD,aA1BjBrH,EA6BnBmP,mBAAqB,SAAAjO,GACnB,IAAMkO,EAAapP,EAAKlB,MAAMK,SAAS2D,kBAAkBsM,WACvDpP,EAAKlB,MAAM0C,SAASd,MACpBQ,GAGFlB,EAAKlB,MAAMK,SAASiB,KAAKS,YACtBwO,kCAAkCD,GAClCxN,KAAK5B,EAAK8O,oBACV3G,MAAM,SAAAd,GAAK,OAAIrH,EAAKoE,SAAS,CAAEiD,aAtCjBrH,EAyCnBsP,SAAW,SAAA7J,GACTzF,EAAKlB,MAAMK,SAASiB,KAAKS,YACtB0O,OAAO9J,GACP7D,KAAK5B,EAAK8O,oBACV3G,MAAM,SAAAd,GAAK,OAAIrH,EAAKoE,SAAS,CAAEiD,aA1ClCrH,EAAKuD,MAAQ,CACXyL,oBAAqB,GACrB3H,MAAO,MALQrH,mFAUjBC,KAAK6O,sDAsCE,IAAA9K,EAAA/D,KAAA0H,EACgC1H,KAAKsD,MAApCyL,EADDrH,EACCqH,oBAAqB3H,EADtBM,EACsBN,MAE7B,OACEtI,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CAAMC,OAAO,GACX/O,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAK/C,OAAN,wBACA/L,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KACG1G,GACCtI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,UAAQ,GACf7J,EAAAC,EAAAC,cAAA,SAAIoI,EAAM9E,UAGdxD,EAAAC,EAAAC,cAAA,WACG2P,GAAgBrJ,IAAI,SAAAiK,GACnB,IAAMC,EAA6C,IAA/BT,EAAoBU,OAClCC,EAAYX,EAAoBtJ,SACpC8J,EAAatG,IAGf,OACEnK,EAAAC,EAAAC,cAAA,QAAM6E,IAAK0L,EAAatG,IACD,aAApBsG,EAAatG,GACZnK,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAME,QAAS,GACb7K,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,KACE9K,EAAAC,EAAAC,cAAC2Q,GAAD,CACEH,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdK,OAAQ7L,EAAKmL,mBACbG,SAAUtL,EAAKsL,WAEjBvQ,EAAAC,EAAAC,cAAA,aAIJF,EAAAC,EAAAC,cAAC6Q,GAAD,CACEL,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdK,OAAQ7L,EAAKiL,kBACbK,SAAUtL,EAAKsL,yBA1FLzQ,aAwG5BkR,GAAoB,SAAAhK,GAAA,IACxB0J,EADwB1J,EACxB0J,YACAE,EAFwB5J,EAExB4J,UACAH,EAHwBzJ,EAGxByJ,aACAK,EAJwB9J,EAIxB8J,OACAP,EALwBvJ,EAKxBuJ,SALwB,OAOxBK,EACE5Q,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEmD,MACsB,eAApB+C,EAAatG,GACT,cACoB,iBAApBsG,EAAatG,GACb,WACoB,gBAApBsG,EAAatG,GACb,UACA,GAENtD,KAAK,SACLC,QAAS,kBAAMyJ,EAASE,EAAatG,KACrCpD,SAAU2J,GAZZ,cAccD,EAAatG,IAG3BnK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEmD,MACsB,eAApB+C,EAAatG,GACT,cACoB,iBAApBsG,EAAatG,GACb,WACoB,gBAApBsG,EAAatG,GACb,UACA,GAENtD,KAAK,SACLC,QAAS,kBAAMgK,EAAOL,EAAahK,YAXrC,QAaQgK,EAAatG,KAInB8G,eACJ,SAAAA,EAAYlR,GAAO,IAAAmR,EAAA,OAAA7Q,OAAAc,EAAA,EAAAd,CAAAa,KAAA+P,IACjBC,EAAA7Q,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAA4Q,GAAA1M,KAAArD,KAAMnB,KAKR2I,SAAW,SAAAC,GACTA,EAAM8C,iBAENyF,EAAKnR,MAAM+Q,OAAOI,EAAK1M,MAAM2D,aAC7B+I,EAAK7L,SAAS,CAAE8C,YAAa,GAAIC,YAAa,MAV7B8I,EAanB5H,SAAW,SAAAX,GACTuI,EAAK7L,SAALhF,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAiBsI,EAAMa,OAAOpC,KAAOuB,EAAMa,OAAOxE,SAXlDkM,EAAK1M,MAAQ,CAAE2D,YAAa,GAAIC,YAAa,IAH5B8I,wEAiBV,IAAAtE,EAMH1L,KAAKnB,MAJP2Q,EAFK9D,EAEL8D,YACAE,EAHKhE,EAGLgE,UACAH,EAJK7D,EAIL6D,aACAF,EALK3D,EAKL2D,SALK7G,EAQ8BxI,KAAKsD,MAAlC2D,EARDuB,EAQCvB,YAAaC,EARdsB,EAQctB,YAEfuB,EACJxB,IAAgBC,GAA+B,KAAhBD,EAEjC,OAAOyI,EACL5Q,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACE1D,KAAK,SACLC,QAAS,kBAAMyJ,EAASE,EAAatG,KACrCpD,SAAU2J,GAHZ,cAKcD,EAAatG,IAE3BnK,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAMpB,SAAUxH,KAAKwH,UACnB1I,EAAAC,EAAAC,cAAC4J,EAAA,EAAKO,MAAN,CAAYC,OAAO,SACjBtK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAOmD,EACPmB,SAAUpI,KAAKoI,SACfzC,KAAK,WACLuD,YAAY,kBAGhBpK,EAAAC,EAAAC,cAAC4J,EAAA,EAAKC,MAAN,KACE/J,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLpC,MAAOoD,EACPkB,SAAUpI,KAAKoI,SACfzC,KAAK,WACLuD,YAAY,2BAIlBpK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAO,EAACzD,SAAU4C,EAAW9C,KAAK,UAA1C,QACQ4J,EAAatG,YAnEIrK,aA0E3BqR,GAAkBtR,EAAaiQ,IAItB5J,eACbE,EACAT,EAJgB,SAAAlD,GAAQ,QAAMA,IAEjByD,CAjQK,kBAClBlG,EAAAC,EAAAC,cAACqF,EAAgBpF,SAAjB,KACG,SAAAsC,GAAQ,OACPzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,MAAX,YAA0BhF,EAASd,OACnC3B,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAME,QAAS,GACb7K,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,KACE9K,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CAAMC,OAAO,GACX/O,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAK/C,OAAN,uBACA/L,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KACEhP,EAAAC,EAAAC,cAAC8L,GAAD,UAKRhM,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,KACE9K,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CAAMC,OAAO,GACX/O,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAK/C,OAAN,qBACA/L,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KACEhP,EAAAC,EAAAC,cAACkR,GAAD,WAMVpR,EAAAC,EAAAC,cAACiR,GAAD,CAAiB1O,SAAUA,6BChD7B4O,eACJ,SAAAA,EAAYtR,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmQ,IACjBpQ,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAgR,GAAA9M,KAAArD,KAAMnB,KAEDyE,MAAQ,CACXuJ,SAAS,EACTxK,MAAO,IALQtC,mFASC,IAAAgE,EAAA/D,KAClBA,KAAKmE,SAAS,CAAE0I,SAAS,IAEzB7M,KAAKnB,MAAMK,SAASmD,QAAQ2K,WAAW,SAAApL,GACrC,IAAMwO,EAAcxO,EAASsL,KAAK5H,IAAI,SAAA6H,GAAC,OAAIA,EAAErL,SAEvCuO,EAAYlR,OAAOkO,KAAK+C,GAAa9K,IAAI,SAAAzB,GAAG,OAAA1E,OAAA4C,EAAA,EAAA5C,CAAA,GAC7CiR,EAAYvM,GADiC,CAEhDpC,IAAKoC,MAGPE,EAAKI,SAAS,CACZ9B,MAAOgO,EACPxD,SAAS,uFASN,IAAAnF,EACoB1H,KAAKsD,MAAxBjB,EADDqF,EACCrF,MAAOwK,EADRnF,EACQmF,QAEf,OACE/N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,MAAX,SACCsG,EACC/N,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAQC,QAAM,EAACC,QAAM,IAErBnP,EAAAC,EAAAC,cAACsR,GAAA,EAAD,CAAOC,YAAU,GACfzR,EAAAC,EAAAC,cAACsR,GAAA,EAAMzF,OAAP,KACE/L,EAAAC,EAAAC,cAACsR,GAAA,EAAME,IAAP,KACE1R,EAAAC,EAAAC,cAACsR,GAAA,EAAMG,WAAP,WACA3R,EAAAC,EAAAC,cAACsR,GAAA,EAAMG,WAAP,iBACA3R,EAAAC,EAAAC,cAACsR,GAAA,EAAMG,WAAP,sBACA3R,EAAAC,EAAAC,cAACsR,GAAA,EAAMG,WAAP,kBAGJ3R,EAAAC,EAAAC,cAACsR,GAAA,EAAMI,KAAP,KACGrO,EAAMiD,IAAI,SAAC9D,EAAM2L,GAAP,OACTrO,EAAAC,EAAAC,cAACsR,GAAA,EAAME,IAAP,CAAW3M,IAAKsJ,GACdrO,EAAAC,EAAAC,cAACsR,GAAA,EAAMK,KAAP,KAAanP,EAAKC,KAClB3C,EAAAC,EAAAC,cAACsR,GAAA,EAAMK,KAAP,KAAanP,EAAKwF,UAClBlI,EAAAC,EAAAC,cAACsR,GAAA,EAAMK,KAAP,KAAanP,EAAKf,OAClB3B,EAAAC,EAAAC,cAACsR,GAAA,EAAMK,KAAP,KACE7R,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEC,SAAO,EACP/C,GAAIC,IACJC,GAAI,CACFmK,SAAQ,GAAA5H,Of7DD,Se6DC,KAAAA,OAAqBxH,EAAKC,KAClC6B,MAAO,CAAE9B,UALb,yBAzDG5C,aA8ERD,KAAawR,ICjFtBU,eACJ,SAAAA,EAAYhS,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA6Q,IACjB9Q,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAA0R,GAAAxN,KAAArD,KAAMnB,KA8BRiS,yBAA2B,WACzB/Q,EAAKlB,MAAMK,SAASsB,gBAAgBT,EAAKuD,MAAM9B,KAAKf,QA7BpDV,EAAKuD,MAALnE,OAAA4C,EAAA,EAAA5C,CAAA,CACE0N,SAAS,EACTrL,KAAM,MACH3C,EAAMT,SAASkF,OANHvD,mFAUC,IAAAgE,EAAA/D,KACdA,KAAKsD,MAAM9B,OAIfxB,KAAKmE,SAAS,CAAE0I,SAAS,IAEzB7M,KAAKnB,MAAMK,SACRsC,KAAKxB,KAAKnB,MAAMP,MAAMyS,OAAO9H,IAC7B+H,GAAG,QAAS,SAAApP,GACXmC,EAAKI,SAAS,CACZ3C,KAAMI,EAASqP,MACfpE,SAAS,wFAaR,IAAAnF,EACmB1H,KAAKsD,MAAvB9B,EADDkG,EACClG,KAAMqL,EADPnF,EACOmF,QAEd,OACE/N,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,CAAMC,OAAO,GACVhB,EACC/N,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,aAEtBnP,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAK/C,OAAN,cAAoBrJ,EAAKC,KACzB3C,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KACGtM,GACC1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4O,GAAA,EAAK9B,QAAN,KACEhN,EAAAC,EAAAC,cAAC4O,GAAA,EAAKtB,KAAN,KACExN,EAAAC,EAAAC,cAAA,yBAAiBwC,EAAKwF,WAExBlI,EAAAC,EAAAC,cAAC4O,GAAA,EAAKE,YAAN,KAAmBtM,EAAKf,OACxB3B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEC,SAAO,EACP3D,KAAK,SACLC,QAAS5F,KAAK8Q,0BAHhB,mCAvDGlS,aAyERD,KAAakS,ICpDb7L,eACbE,EACAT,EALgB,SAAAlD,GAAQ,OACxBA,GAAYA,EAAS2P,MAAMzL,SCxBR,WD0BNT,CAfG,kBAChBlG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,MAAX,SACAzH,EAAAC,EAAAC,cAAA,wEAEAF,EAAAC,EAAAC,cAACmS,GAAA,EAAD,KACErS,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOC,OAAK,EAACC,KjBRY,aiBQgBC,UAAWV,KACpD/R,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOC,OAAK,EAACC,KjBVY,SiBUQC,UAAWpB,qMEI5CqB,GAAY,CAChB,CACEC,MAAK,mCACLC,QAAS,CAAC,CACR5N,MAAO,SACP6N,MAAOC,MAEP,CACE9N,MAAO,MACP6N,MAAOE,MACN,CACD/N,MAAO,UACP6N,MAAOG,MACN,CACDhO,MAAO,QACP6N,MAAOI,QAGb,CACEJ,MAAK,GACLF,MAAK,2BACLC,QAAS,CAAC,CACR5N,MAAO,MACP6N,MAAOK,MAEP,CACElO,MAAO,MACP6N,MAAOM,MACN,CACDnO,MAAO,OACP6N,MAAOO,MACN,CACDpO,MAAO,OACP6N,MAAOQ,SAITC,eACJ,SAAAA,EAAYvT,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAoS,IACjBrS,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAiT,GAAA/O,KAAArD,QACKqS,SAAWb,GAAUc,QAFTvS,wEAKV,IAAAgE,EAAA/D,KACP,OACElB,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB7K,EAAAC,EAAAC,cAACyK,EAAA,EAAK+G,IAAN,CAAU3G,UAAU,UAClB/K,EAAAC,EAAAC,cAAA,QAAMwI,SAAUxH,KAAKwH,SAAUsB,UAAU,UACvChK,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,MAAMvG,KAAKqS,SAASZ,OAC/B3S,EAAAC,EAAAC,cAACuT,GAAA,EAAD,MAEAzT,EAAAC,EAAAC,cAACyK,EAAA,EAAD,KACE3K,EAAAC,EAAAC,cAACyK,EAAA,EAAK+G,IAAN,CAAU7G,QAAS,GAChB3J,KAAKqS,SAASX,QAAQpM,IAAI,SAACkN,GAE1B,OACE1T,EAAAC,EAAAC,cAACyK,EAAA,EAAKG,OAAN,CAAa/F,IAAK2O,EAAO1O,OACvBhF,EAAAC,EAAAC,cAACyT,GAAA,EAAD,CAAO1J,IAAKyJ,EAAOb,MAAOzD,KAAK,QACxBpF,UAAW/E,EAAK2O,iBAAmBF,EAAO1O,MAAQ,iBAAmB,mCACrE8B,QAAS7B,EAAK4O,cAAcC,KAAK7O,EAAMyO,EAAO1O,SACrDhF,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,MAAMiM,EAAO1O,MAAM+O,OAAO,GAAGC,cAAgBN,EAAO1O,MAAMiP,MAAM,kDAYjFP,GACTA,IACDxS,KAAKqS,SAAWb,GAAUc,QAC1BtS,KAAKmE,SAAS,CAAC6O,OAAQ,OAEnBhT,KAAKqS,UACPrS,KAAKnB,MAAMiG,QAAQC,KAAKkD,WAzCDrJ,aA+CzBqU,GAAejO,YACnBC,IAAYtG,EAAcqE,EADPgC,CAEnBoN,ICtGIc,WAAI/U,OAAO+U,GAEJC,GAAb,SAAAC,GACI,SAAAD,EAAYtU,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmT,IACfpT,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAgU,GAAA9P,KAAArD,KAAMnB,KACDwU,OAAQ,EAFEtT,EADvB,OAAAZ,OAAAwE,EAAA,EAAAxE,CAAAgU,EAAAC,GAAAjU,OAAAyE,EAAA,EAAAzE,CAAAgU,EAAA,EAAAtP,IAAA,oBAAAC,MAAA,WAOQ,IAAMwP,EAAOtT,KAEbkT,GAAE,IAAMlT,KAAKnB,MAAMmJ,QAAQgJ,GAAG,aAAc,SAAUvJ,GAElDyL,GAAElT,MAAMuT,SAAS,eAAeC,MAAM,KAAKC,QAAQ,GACnDP,GAAE,IAAMI,EAAKzU,MAAMmJ,QAAQ0L,KAAK,WAAWhG,SAE3CwF,GAAE,IAAMI,EAAKzU,MAAMmJ,QAAQ2L,OAAO,wCAClC7L,IAAMC,KAAK,mCAAoC,CAC3CC,OAAQsL,EAAKzU,MAAMsB,KAAKsB,IACxBmS,UAAWN,EAAKzU,MAAMmJ,OACtB6L,QAAQ,MAKhBX,GAAE,IAAMlT,KAAKnB,MAAMmJ,QAAQgJ,GAAG,YAAa,SAAUvJ,GAGjDyL,GAAElT,MAAMuT,SAAS,gBAAgBC,MAAM,KAAKC,QAAQ,GACpDP,GAAE,IAAMI,EAAKzU,MAAMmJ,QAAQ0L,KAAK,WAAWhG,SAC3CwF,GAAE,IAAMI,EAAKzU,MAAMmJ,QAAQ2L,OAAO,kDA5B9C,CAAA9P,IAAA,SAAAC,MAAA,WAoCQ,IAAMgQ,EAAW,CACbC,gBAAiB,OAAS/T,KAAKnB,MAAMmV,IAAM,IAC3CC,QAAS,SAEPC,EAAM,GAAAC,KAAKC,SAAwB,GACzC,OACItV,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,QAAQG,GAAIjJ,KAAKnB,MAAMmJ,OAAQqM,MAAO,CAACJ,QAAS,UAC3DnV,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,SAASuL,MAAOP,IAE/BhV,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,SACXhK,EAAAC,EAAAC,cAAA,QAAM8J,UAAU,WACX9I,KAAKnB,MAAMyV,MADhB,MAIJxV,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,KAAK8N,MAAO,CAACE,gBAAiB,YACpCvU,KAAKnB,MAAMmI,SADhB,KAC4BkN,EAAIM,QAAQ,IAExC1V,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAQtE,GAAG,KAAK8N,MAAO,CAACE,gBAAiB,YACpCvU,KAAKnB,MAAM4V,MAAMC,KAAK,YAtD3CvB,EAAA,CAA2BvU,aCqBrB+V,eACF,SAAAA,EAAY9V,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2U,IACf5U,EAAAZ,OAAAgE,EAAA,EAAAhE,CAAAa,KAAAb,OAAAiE,EAAA,EAAAjE,CAAAwV,GAAAtR,KAAArD,KAAMnB,KAEDyE,MAAQ,CAAC8D,MAAO,KAAMwN,YAAY,EAAOC,OAAQ,IAHvC9U,qFAMG+U,EAAWC,GAC7B,OAAQ/U,KAAKsD,MAAMsR,uDAIH,IAAA7Q,EAAA/D,KAChB8H,IAAMpG,IAAI,yEAAyEC,KAAK,SAACqT,GACrFjR,EAAKI,SAAS,CACV0Q,OAAQG,EAAIlT,0CAMpB,IAAM3B,EAAO,CAACsB,IAAK,OACnB,OAAIzB,KAAKsD,MAAMuR,OAAOpF,QAClBzP,KAAKmE,SAAS,CAACyQ,YAAY,IAGvB9V,EAAAC,EAAAC,cAAA,OAAK8J,UAAU,YAEP9I,KAAKsD,MAAMuR,OAAOvP,IAAI,SAAA+N,GAClB,OAAQvU,EAAAC,EAAAC,cAACiW,GAAD,CAAOjO,SAAUqM,EAAMrM,SAAUgB,OAAQqL,EAAM6B,OAAQlB,IAAKX,EAAMhJ,WAC3DiK,MAAOjB,EAAM8B,KAAMV,MAAOpB,EAAM+B,UAChCjV,KAAMA,MAG7BrB,EAAAC,EAAAC,cAAA,OAAKqV,MAAO,CACRrO,SAAU,WACVqP,IAAK,UACLC,KAAM,YAENxW,EAAAC,EAAAC,cAAA,OAAK+J,IAAI,sBAAsBE,GAAG,UAClCnK,EAAAC,EAAAC,cAAA,OAAK+J,IAAI,sBAAsBE,GAAG,aAKtCnK,EAAAC,EAAAC,cAAA,mBA7CIJ,aAkDlB2W,GAAQvQ,YACVC,IAAYtG,EAAcqE,EADhBgC,CAEZ2P,ICxCa3R,KAtBH,kBACVlE,EAAAC,EAAAC,cAACwW,EAAA,EAAD,KACE1W,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyW,EAAD,MACA3W,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KAEExH,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KAAMrJ,EAAesJ,UAAWmE,IACvC5W,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOC,OAAK,EAACC,KtBxBU,IsBwBYC,UAAW7G,KAC9C5L,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CACEE,KtBrBqB,asBsBrBC,UAAWoE,KAEb7W,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KtB5BgB,QsB4BGC,UAAWhD,KACrCzP,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KtB3BgB,WsB2BMC,UAAWqE,KACxC9W,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KAAMrJ,EAAcsJ,UAAWgE,KACtCzW,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KtB1BgB,SsB0BIC,UAAWsE,KACtC/W,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAOE,KtB7BgB,YsB6BOC,UAAW0B,UCzBjD6C,IAASC,OACPjX,EAAAC,EAAAC,cAACgX,EAAgB1R,SAAjB,CAA0BR,MAAO,IAAIhE,GACnChB,EAAAC,EAAAC,cAACiX,GAAD,OAEFC,SAASC,eAAe,S7BmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3U,KAAK,SAAA4U,GACjCA,EAAaC","file":"static/js/main.31318283.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gay.a5187fc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/hetero.a6224340.svg\";","module.exports = __webpack_public_path__ + \"static/media/lesbian.52d7dd11.svg\";","module.exports = __webpack_public_path__ + \"static/media/trans.ec6dc392.svg\";","module.exports = __webpack_public_path__ + \"static/media/cat.3c633702.svg\";","module.exports = __webpack_public_path__ + \"static/media/dog.dadc9ba5.svg\";","module.exports = __webpack_public_path__ + \"static/media/duck.d34dbf0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fish.fb10e632.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.firestore.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.firestore();\n\n    /* Social Sign In Method Provider */\n\n  \n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    \n  }\n\n  // *** Auth API ***\n  \n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .get()\n          .then(snapshot => {\n            const dbUser = snapshot.data();\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.collection(`users`).doc(uid);\n\n  users = () => this.db.collection(`users`);\n\n  // *** Message API ***\n\n  message = uid => this.db.collection(`messages`).doc(uid);\n\n  messages = () => this.db.collection(`messages`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} auth={this.state.authUser}/>\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","// export const LANDING         = '/';\nexport const SET_UP          = '/setup';\nexport const SIGN_IN         = '/';\nexport const HOME            = '/home';\nexport const MATCH            = '/match';\nexport const ACCOUNT         = '/account';\nexport const QUESTION        = '/question';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN           = '/admin';\nexport const ADMIN_DETAILS   = '/admin/:id'","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check you E-Mails (Spam\n                    folder included) for a confirmation E-Mail.\n                    Refresh this page once you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check you E-Mails (Spam folder\n                    included) for a confirmation E-Mail or send\n                    another confirmation E-Mail.\n                  </p>\n                )}\n\n                <button\n                  type=\"button\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Send confirmation E-Mail\n                </button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nimport { Menu } from 'semantic-ui-react';\n\nconst SignOutButton = ({ firebase }) => (\n  <Menu.Menu position=\"right\">\n    <Menu.Item name=\"Logout\" onClick={firebase.doSignOut} />\n  </Menu.Menu>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nimport { Container, Menu } from 'semantic-ui-react';\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? (\n        <NavigationAuth authUser={authUser} />\n      ) : (\n        <NavigationNonAuth />\n      )\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <Menu pointing secondary>\n    <Container>\n      {/* <Menu.Item name=\"Landing\" as={Link} to={ROUTES.LANDING} /> */}\n      <Menu.Item name=\"home\" as={Link} to={ROUTES.HOME} />\n      <Menu.Item name=\"Account\" as={Link} to={ROUTES.ACCOUNT} />\n      <SignOutButton />\n    </Container>\n  </Menu>\n);\n\nconst NavigationNonAuth = () => (\n  <Menu pointing secondary>\n    <Container>\n      {/* <Menu.Item name=\"home\" as={Link} to={ROUTES.LANDING} /> */}\n      <Menu.Menu position=\"right\">\n        <Menu.Item name=\"Sign in\" as={Link} to={ROUTES.SIGN_IN} />\n      </Menu.Menu>\n    </Container>\n  </Menu>\n);\n\nexport default Navigation;\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport axios from 'axios';\n\nimport {\n  Form,\n  Button,\n  Grid,\n  Header,\n  Message,\n} from 'semantic-ui-react';\nimport {withAuthentication} from '../Session';\n\nconst ProfileSetUpPage = () => (\n  <Grid centered columns={1}>\n    <Grid.Column textAlign=\"center\">\n      <SignUpForm/>\n    </Grid.Column>\n  </Grid>\n);\n\nconst INITIAL_STATE = {\n  username:    '',\n  email:       '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin:     false,\n  error:       null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = this.props;\n    this.state = {...INITIAL_STATE, ...{\n      facebookUser: JSON.parse(localStorage.getItem(\"facebookData\") || {})\n    }};\n\n    this.state.username = this.state.facebookUser.name;\n  }\n  \n  onSubmit = event => {\n    const {username, gitUsername, tenBisEmail, tenBisPassword} = this.state;\n    \n    return axios.post('https://gitlove.herokuapp.com/updateProfile', {\n      userId: this.props.auth.uid,\n      username,\n      gitUsername,\n      tenBisEmail,\n      tenBisPassword\n    })\n      .then(() => {\n        this.setState({error: null});\n        this.props.history.push(ROUTES.MATCH);\n      })\n      .catch(error => {\n        if(error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n        \n        this.setState({error});\n      })\n  };\n  \n  onChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  };\n  \n  render() {\n    const {\n            gitUsername,\n            username,\n            tenBisEmail,\n            tenBisPassword,\n            error,\n          } = this.state;\n    \n    const isInvalid =\n            tenBisPassword === '' ||\n            tenBisEmail === '' ||\n            gitUsername === '';\n    \n    return (\n      <div>\n        {error && (\n          <Message negative>\n            <p>{error.message}</p>\n          </Message>\n        )}\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field>\n            <img className=\"profilePic\" src={`https://graph.facebook.com/${this.state.facebookUser.id}/picture?width=800`} />\n            <h1 id=\"welcomeMessage\">\n              Hi, {this.state.facebookUser.name}\n            </h1>\n            <label className=\"signUpMessage\">\n              Let's connect to GitHub and 10bis\n            </label>\n            <input\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"GitLove Username\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              name=\"gitUsername\"\n              value={gitUsername}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Github Username\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              name=\"tenBisEmail\"\n              value={tenBisEmail}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"10Bis Email\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <input\n                name=\"tenBisPassword\"\n                value={tenBisPassword}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"10Bis Password\"\n              />\n            </Form.Field>\n          </Form.Group>\n          <Button primary disabled={isInvalid} type=\"submit\" className=\"signUpButton\">\n            Connect\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SET_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(withAuthentication(SignUpFormBase)));\n\nexport default ProfileSetUpPage;\n\nexport {SignUpForm, SignUpLink};\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\n\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport {\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Message,\n} from 'semantic-ui-react';\n\nconst SignInPage = () => (\n  <Grid centered columns={1}>\n    <Grid.Column textAlign=\"center\">\n      <img src=\"/images/logo.png\" id=\"logo\"></img>\n      <SignInFacebook textAlign=\"center\"/>\n    </Grid.Column>\n  </Grid>\n);\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n        'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {error: null};\n  }\n  \n  onSubmit = (event) => {\n    let socialAuthUser;\n    \n    this.props.firebase.doSignInWithFacebook()\n      .then((authUser) => {\n        socialAuthUser = authUser;\n        return this.props.firebase.user(authUser.user.uid).get();\n      })\n      .then(\n        (userDocument) => {\n          localStorage.setItem(\"facebookData\", JSON.stringify(socialAuthUser.additionalUserInfo.profile))\n          if(!userDocument.exists) {\n            return this.props.firebase.user(socialAuthUser.user.uid).set({\n              name:          socialAuthUser.additionalUserInfo.profile.name,\n              profilePic:    `https://graph.facebook.com/${socialAuthUser.additionalUserInfo.profile.id}/picture?width=800`,\n              gender:        'male'\n            });\n          }\n        }\n      )\n      .then(() => {\n        this.setState({error: null});\n        this.props.history.push(ROUTES.SET_UP);\n      })\n      .catch(error => {\n        if(error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n        \n        this.setState({error});\n      });\n    \n    event.preventDefault();\n  };\n  \n  render() {\n    const {error} = this.state;\n    \n    return (\n      <form onSubmit={this.onSubmit} className=\"inline\">\n        <Button type=\"submit\" className=\"facebookLogin\">\n          <Icon name=\"facebook\"/> Connect with Facebook\n        </Button>\n        \n        {error && (\n          <Message negative>\n            <p>{error.message}</p>\n          </Message>\n        )}\n      </form>\n    );\n  }\n}\n\nconst SignInFacebook = compose(\n  withRouter, withFirebase\n)(SignInFacebookBase);\n\nexport default SignInPage;\n\nexport {SignInFacebook};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport {\n  Grid,\n  Form,\n  Header,\n  Button,\n  Message,\n} from 'semantic-ui-react';\n\nconst PasswordForgetPage = () => (\n  <Grid centered columns={2}>\n    <Grid.Column>\n      <Header as=\"h2\" textAlign=\"center\">\n        Password Forget\n      </Header>\n      <PasswordForgetForm />\n    </Grid.Column>\n  </Grid>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <div>\n        {error && (\n          <Message negative>\n            <p>{error.message}</p>\n          </Message>\n        )}\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field>\n            <label>Email</label>\n            <input\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n          </Form.Field>\n          <Button primary disabled={isInvalid} type=\"submit\">\n            Reset My Password\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { distanceInWordsToNow } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport { Feed, Icon, Form, Button } from 'semantic-ui-react';\n\nexport const TimeAgo = ({ time }) => (\n  <time>{distanceInWordsToNow(time)} ago</time>\n);\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <Feed.Event>\n        <Feed.Content>\n          <Feed.Summary>\n            <Feed.User as={Link} to={`/`}>\n              {message.user.username || message.user.userId}\n            </Feed.User>\n            <Feed.Date>\n              <TimeAgo time={message.createdAt} />\n            </Feed.Date>\n          </Feed.Summary>\n          <Feed.Extra>\n            {editMode ? (\n              <Form>\n                <Form.Field>\n                  <input\n                    type=\"text\"\n                    value={editText}\n                    onChange={this.onChangeEditText}\n                  />\n                </Form.Field>\n              </Form>\n            ) : (\n              <span>\n                {message.text}{' '}\n                {message.editedAt && <span>(Edited)</span>}\n              </span>\n            )}\n          </Feed.Extra>\n          <Feed.Meta>\n            {editMode ? (\n              <span>\n                <Button icon onClick={this.onSaveEditText}>\n                  <Icon color=\"green\" name=\"save outline\" />\n                </Button>\n                <Button icon onClick={this.onToggleEditMode}>\n                  <Icon color=\"blue\" name=\"undo alternate\" />\n                </Button>\n              </span>\n            ) : (\n              <span>\n                <Button icon onClick={this.onToggleEditMode}>\n                  <Icon color=\"blue\" name=\"edit outline\" />\n                </Button>\n                <Button\n                  icon\n                  onClick={() => onRemoveMessage(message.uid)}\n                >\n                  <Icon color=\"red\" name=\"trash alternate\" />\n                </Button>\n              </span>\n            )}\n          </Feed.Meta>\n        </Feed.Content>\n      </Feed.Event>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nimport { Feed } from 'semantic-ui-react';\n\nconst MessageList = ({\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <Feed>\n    {messages.map(message => (\n      <MessageItem\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </Feed>\n);\n\nexport default MessageList;\n","import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nimport {\n  Card,\n  Message,\n  Button,\n  Loader,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderBy('createdAt')\n      .limit(this.state.limit)\n      .onSnapshot(snapshot => {\n        const messageObject = snapshot.docs.map(i => i.data());\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    // this.props.firebase.messages().off();\n\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().add({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: Date.now(),\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: Date.now(),\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Card fluid={true}>\n            <Card.Content>\n              <Card.Description>\n                {loading && <Loader active inline=\"centered\" />}\n\n                {!loading && messages && (\n                  <Button\n                    size=\"small\"\n                    positive\n                    type=\"button\"\n                    onClick={this.onNextPage}\n                  >\n                    Load Older Messages\n                  </Button>\n                )}\n\n                {messages && (\n                  <MessageList\n                    messages={messages.map(message => ({\n                      ...message,\n                      user: users\n                        ? users[message.userId]\n                        : { userId: message.userId },\n                    }))}\n                    onEditMessage={this.onEditMessage}\n                    onRemoveMessage={this.onRemoveMessage}\n                  />\n                )}\n\n                {!loading && !messages && (\n                  <Message info>\n                    <p>There are no messages ...</p>\n                  </Message>\n                )}\n\n                {!loading && (\n                  <Form\n                    onSubmit={event =>\n                      this.onCreateMessage(event, authUser)\n                    }\n                  >\n                    <Form.TextArea\n                      value={text}\n                      onChange={this.onChangeText}\n                      placeholder=\"Enter your message here...\"\n                    />\n                    <Button primary type=\"submit\">\n                      Send <Icon name=\"send\" />\n                    </Button>\n                  </Form>\n                )}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n","import Messages from './Messages';\n\nexport default Messages;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport Messages from '../Messages';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().onSnapshot(snapshot => {\n      const users = {};\n      snapshot.docs.forEach(doc => {\n        users[doc.id] = doc.data()\n      });\n\n      this.setState({\n        users\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    // this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Home Page</h1>\n        <p>The Home Page is accessible by every signed in user.</p>\n\n        <Messages users={this.state.users} />\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withEmailVerification,\n  withAuthorization(condition),\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nimport { Form, Message, Button } from 'semantic-ui-react';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        {error && (\n          <Message negative>\n            <p>{error.message}</p>\n          </Message>\n        )}\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>Old Password</label>\n            <input\n              name=\"passwordOne\"\n              value={passwordOne}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"New Password\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>New Password</label>\n            <input\n              name=\"passwordTwo\"\n              value={passwordTwo}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n            />\n          </Form.Field>\n        </Form.Group>\n        <Button primary disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nimport {\n  Grid,\n  Card,\n  Header,\n  Message,\n  Form,\n  Button,\n} from 'semantic-ui-react';\n\nconst SIGN_IN_METHODS = [\n\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  }\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <Header as=\"h2\">Account: {authUser.email}</Header>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Card fluid={true}>\n              <Card.Content>\n                <Card.Header>Reset Password</Card.Header>\n                <Card.Description>\n                  <PasswordForgetForm />\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n          <Grid.Column>\n            <Card fluid={true}>\n              <Card.Content>\n                <Card.Header>New Password</Card.Header>\n                <Card.Description>\n                  <PasswordChangeForm />\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid>\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <Card fluid={true}>\n        <Card.Content>\n          <Card.Header>Sign In Methods</Card.Header>\n          <Card.Description>\n            {error && (\n              <Message negative>\n                <p>{error.message}</p>\n              </Message>\n            )}\n            <div>\n              {SIGN_IN_METHODS.map(signInMethod => {\n                const onlyOneLeft = activeSignInMethods.length === 1;\n                const isEnabled = activeSignInMethods.includes(\n                  signInMethod.id,\n                );\n\n                return (\n                  <span key={signInMethod.id}>\n                    {signInMethod.id === 'password' ? (\n                      <Grid columns={1}>\n                        <Grid.Column>\n                          <DefaultLoginToggle\n                            onlyOneLeft={onlyOneLeft}\n                            isEnabled={isEnabled}\n                            signInMethod={signInMethod}\n                            onLink={this.onDefaultLoginLink}\n                            onUnlink={this.onUnlink}\n                          />\n                          <br />\n                        </Grid.Column>\n                      </Grid>\n                    ) : (\n                      <SocialLoginToggle\n                        onlyOneLeft={onlyOneLeft}\n                        isEnabled={isEnabled}\n                        signInMethod={signInMethod}\n                        onLink={this.onSocialLoginLink}\n                        onUnlink={this.onUnlink}\n                      />\n                    )}\n                  </span>\n                );\n              })}\n            </div>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <Button\n      color={\n        signInMethod.id === 'google.com'\n          ? 'google plus'\n          : signInMethod.id === 'facebook.com'\n          ? 'facebook'\n          : signInMethod.id === 'twitter.com'\n          ? 'twitter'\n          : ''\n      }\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </Button>\n  ) : (\n    <Button\n      color={\n        signInMethod.id === 'google.com'\n          ? 'google plus'\n          : signInMethod.id === 'facebook.com'\n          ? 'facebook'\n          : signInMethod.id === 'twitter.com'\n          ? 'twitter'\n          : ''\n      }\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </Button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <span>\n        <Button\n          type=\"button\"\n          onClick={() => onUnlink(signInMethod.id)}\n          disabled={onlyOneLeft}\n        >\n          Deactivate {signInMethod.id}\n        </Button>\n        <br />\n      </span>\n    ) : (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>New Password</label>\n            <input\n              name=\"passwordOne\"\n              value={passwordOne}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"New Password\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm Password</label>\n            <input\n              name=\"passwordTwo\"\n              value={passwordTwo}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n            />\n          </Form.Field>\n        </Form.Group>\n        <Button primary disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport { Header, Loader, Table, Button } from 'semantic-ui-react';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().onSnapshot(snapshot => {\n      const usersObject = snapshot.docs.map(i => i.data());\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    // this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <Header as=\"h2\">Users</Header>\n        {loading ? (\n          <Loader active inline />\n        ) : (\n          <Table singleLine>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Username</Table.HeaderCell>\n                <Table.HeaderCell>Email Address</Table.HeaderCell>\n                <Table.HeaderCell>Actions</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {users.map((user, i) => (\n                <Table.Row key={i}>\n                  <Table.Cell>{user.uid}</Table.Cell>\n                  <Table.Cell>{user.username}</Table.Cell>\n                  <Table.Cell>{user.email}</Table.Cell>\n                  <Table.Cell>\n                    <Button\n                      primary\n                      as={Link}\n                      to={{\n                        pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                        state: { user },\n                      }}\n                    >\n                      Details\n                    </Button>\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { Card, Loader, Button } from 'semantic-ui-react';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    // this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <Card fluid={true}>\n        {loading ? (\n          <Loader active inline=\"centered\" />\n        ) : (\n          <Card.Content>\n            <Card.Header>User: {user.uid}</Card.Header>\n            <Card.Description>\n              {user && (\n                <div>\n                  <Card.Content>\n                    <Card.Meta>\n                      <span>Username: {user.username}</span>\n                    </Card.Meta>\n                    <Card.Description>{user.email}</Card.Description>\n                    <br />\n                    <Button\n                      primary\n                      type=\"button\"\n                      onClick={this.onSendPasswordResetEmail}\n                    >\n                      Send Password Reset\n                    </Button>\n                  </Card.Content>\n                </div>\n              )}\n            </Card.Description>\n          </Card.Content>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { UserList, UserItem } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nimport { Header } from 'semantic-ui-react';\n\nconst AdminPage = () => (\n  <div>\n    <Header as=\"h2\">Admin</Header>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPage);\n","export const ADMIN = 'ADMIN';\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\n\nimport {withFirebase} from '../Firebase';\n\nimport gay from '../../assets/gay.svg';\nimport hetero from '../../assets/hetero.svg';\nimport lesbian from '../../assets/lesbian.svg';\nimport trans from '../../assets/trans.svg';\n\nimport cat from '../../assets/cat.svg';\nimport dog from '../../assets/dog.svg';\nimport duck from '../../assets/duck.svg';\nimport fish from '../../assets/fish.svg';\n\nimport {\n  Grid, Header, Divider, Image,\n} from 'semantic-ui-react';\nimport withAuthentication from '../Session/withAuthentication';\nimport * as ROUTES from '../../constants/routes';\n\nconst questions = [\n  {\n    label:   `What is your sexual orientation?`,\n    answers: [{\n      value: 'hetero',\n      image: hetero\n    },\n      {\n        value: 'gay',\n        image: gay\n      }, {\n        value: 'lesbian',\n        image: lesbian\n      }, {\n        value: 'trans',\n        image: trans\n      }]\n  },\n  {\n    image:   ``,\n    label:   `What is favorite animal?`,\n    answers: [{\n      value: 'cat',\n      image: cat\n    },\n      {\n        value: 'dog',\n        image: dog\n      }, {\n        value: 'duck',\n        image: duck\n      }, {\n        value: 'fish',\n        image: fish\n      }]\n  }];\n\nclass QuestionViewBase extends Component {\n  constructor(props) {\n    super();\n    this.question = questions.shift();\n  }\n  \n  render() {\n    return (\n      <Grid centered columns={2}>\n        <Grid.Row textAlign=\"center\">\n          <form onSubmit={this.onSubmit} className=\"inline\">\n            <Header as='h2'>{this.question.label}</Header>\n            <Divider></Divider>\n            \n            <Grid>\n              <Grid.Row columns={2}>\n                {this.question.answers.map((answer) => {\n                  // Return the element. Also pass key\n                  return (\n                    <Grid.Column key={answer.value}>\n                      <Image src={answer.image} size=\"small\"\n                             className={this.selectedAnswer === answer.value ? 'question-image' : 'question-image clickable no-fill'}\n                             onClick={this.onAnswerClick.bind(this, answer.value)}/>\n                      <Header as='h3'>{answer.value.charAt(0).toUpperCase() + answer.value.slice(1)}</Header>\n                    </Grid.Column>)\n                })}\n              </Grid.Row>\n            </Grid>\n          \n          </form>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  \n  onAnswerClick(answer) {\n    if(answer) {\n      this.question = questions.shift();\n      this.setState({errors: null});\n      \n      if(!this.question) {\n        this.props.history.push(ROUTES.MATCH);\n      }\n    }\n  }\n}\n\nconst QuestionView = compose(\n  withRouter, withFirebase, withAuthentication\n)(QuestionViewBase);\n\nexport {QuestionView};\n","import React, {Component} from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport {Header} from \"semantic-ui-react\";\nimport {Grid} from \"semantic-ui-react/dist/commonjs/collections/Grid\";\n\nconst $ = window.$;\n\nexport class Swipe extends Component {\n    constructor(props) {\n        super(props);\n        this.swipe = false;\n    }\n\n    componentDidMount() {\n        const self = this;\n\n        $(\"#\" + this.props.userId).on(\"swiperight\", function (event) {\n            // event.preventDefault()\n            $(this).addClass('rotate-left').delay(700).fadeOut(1);\n            $(\"#\" + self.props.userId).find('.status').remove();\n\n            $(\"#\" + self.props.userId).append('<div class=\"status like\">Like!</div>');            //\n            axios.post('http://172.168.168.67:5000/match', {\n                userId: self.props.auth.uid,\n                matchedId: self.props.userId,\n                result: true\n            });\n            // $(this).next().removeClass('rotate-left rotate-right').fadeIn(400);\n        });\n\n        $(\"#\" + this.props.userId).on(\"swipeleft\", function (event) {\n            // event.preventDefault()\n\n            $(this).addClass('rotate-right').delay(700).fadeOut(1);\n            $(\"#\" + self.props.userId).find('.status').remove();\n            $(\"#\" + self.props.userId).append('<div class=\"status dislike\">Dislike!</div>');\n\n            // $(this).next().removeClass('rotate-left rotate-right').fadeIn(400);\n\n        });\n    }\n\n    render() {\n        const divStyle = {\n            backgroundImage: 'url(' + this.props.pic + ')',\n            display: 'block'\n        };\n        const age = Math.random() * (+30 - 20) + +20;\n        return (\n            <div className=\"buddy\" id={this.props.userId} style={{display: \"block\"}}>\n                <div className=\"avatar\" style={divStyle}>\n                </div>\n                <div className='score'>\n                    <span className='inScore'>\n                        {this.props.score}%\n                    </span>\n                </div>\n                <Header as='h3' style={{backgroundColor: '#f9f9f9'}}>\n                    {this.props.username}, {age.toFixed(0)}\n                </Header>\n                <Header as='h4' style={{backgroundColor: '#f9f9f9'}}>\n                    {this.props.langs.join(', ')}\n                </Header>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport axios from 'axios'\nimport {withFirebase} from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport {\n    Grid,\n    Button,\n    Header,\n    Icon,\n    Message,\n} from 'semantic-ui-react';\nimport withAuthentication from \"../Session/withAuthentication\";\nimport {Swipe} from \"../Swipe\";\n\nconst MatchPage = () => (\n    <Grid centered columns={2}>\n        <Grid.Column textAlign=\"center\">\n            <Header as=\"h3\">\n                Find match\n            </Header>\n            <Match textAlign=\"center\"/>\n        </Grid.Column>\n    </Grid>\n);\n\n\nclass MatchBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {error: null, hasFetched: false, swipes: []};\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return !this.state.hasFetched;\n\n    }\n\n    componentDidMount() {\n        axios.get('https://gitlove.herokuapp.com/getMatches/20FW9KzUP6XV4HZPrW6PXD3PTie2').then((res) => {\n            this.setState({\n                swipes: res.data\n            })\n        })\n    }\n\n    render() {\n        const auth = {uid: '123'};\n        if (this.state.swipes.length) {\n            this.setState({hasFetched: true});\n\n            return (\n                <div className='swipeCon'>\n                    {\n                        this.state.swipes.map(swipe => {\n                            return (<Swipe username={swipe.username} userId={swipe.usedId} pic={swipe.profilePic}\n                                           score={swipe.rank} langs={swipe.languages}\n                                           auth={auth}></Swipe>)\n                        })\n                    }\n                    <div style={{\n                        position: 'absolute',\n                        top: '603.2px',\n                        left: '107.5px'\n                    }}>\n                        <img src=\"/images/icon-04.png\" id=\"xLogo\"></img>\n                        <img src=\"/images/icon-05.png\" id=\"vLogo\"></img>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div></div>)\n        }\n    }\n}\n\nconst Match = compose(\n    withRouter, withFirebase, withAuthentication\n)(MatchBase);\n\nexport default MatchPage;\n\nexport {Match};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport ProfileSetUpPage from '../ProfileSetUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nimport { Container } from 'semantic-ui-react';\nimport {QuestionView} from '../Question';\nimport {Match} from \"../Match\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Container>\n        {/* <Route exact path={ROUTES.LANDING} component={LandingPage} /> */}\n        <Route path={ROUTES.SET_UP} component={ProfileSetUpPage} />\n        <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route\n          path={ROUTES.PASSWORD_FORGET}\n          component={PasswordForgetPage}\n        />\n        <Route path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route path={ROUTES.MATCH} component={Match} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\n        <Route path={ROUTES.QUESTION} component={QuestionView}/>\n      </Container>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}